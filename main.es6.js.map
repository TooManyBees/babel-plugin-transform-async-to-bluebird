{"version":3,"sources":["main.es2015.js"],"names":[],"mappings":"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","file":"main.es6.js","sourcesContent":["// @flow\n// import syntaxAsyncFunctions from '@babel/plugin-syntax-async-generators';\nimport type {NodePath} from '@babel/traverse';\nimport traverse from '@babel/traverse';\nimport nameFunction from '@babel/helper-function-name';\nimport template from 'babel-template';\n\nimport { addNamed } from '@babel/helper-module-imports';\n\nconst FUNCTION_TYPES = [\n\t'FunctionDeclaration',\n\t'FunctionExpression',\n\t'ArrowFunctionExpression',\n];\n\nconst BUILD_WRAPPER = template(`\n\t(() => {\n\t\tvar REF = FUNCTION;\n\t\treturn function NAME(PARAMS) {\n\t\t\treturn REF.apply(this, arguments);\n\t\t};\n\t})\n`);\n\nconst NAMED_BUILD_WRAPPER = template(`\n\t(() => {\n\t\tvar REF = FUNCTION;\n\t\tfunction NAME(PARAMS) {\n\t\t\treturn REF.apply(this, arguments);\n\t\t}\n\t\treturn NAME;\n\t})\n`);\n\nexport default function asyncToBluebird(pluginArg: any) {\n\tconst {types: t} = pluginArg;\n\n\tfunction classOrObjectMethod(path: NodePath, state: any, hasAwait: boolean) {\n\t\tconst {node} = path;\n\t\tconst {body} = node;\n\n\t\tnode.async = false;\n\t\tnode.generator = false;\n\n\t\tconst container = t.functionExpression(null, [], t.blockStatement(body.body), hasAwait);\n\t\tcontainer.shadow = true;\n\t\tconst bbImport = addNamed(path, 'bluebird', hasAwait ? 'coroutine' : 'method');\n\t\tbody.body = [\n\t\t\tt.returnStatement(\n\t\t\t\tt.callExpression(\n\t\t\t\t\tt.callExpression(\n\t\t\t\t\t\tbbImport,\n\t\t\t\t\t\t[container]\n\t\t\t\t\t),\n\t\t\t\t\t[]\n\t\t\t\t)\n\t\t\t),\n\t\t];\n\t}\n\n\tfunction plainFunction(path: NodePath, state: any, hasAwait: boolean) {\n\t\tconst {node} = path;\n\t\tconst isDeclaration = path.isFunctionDeclaration();\n\t\tconst asyncFnId = node.id;\n\n\t\tlet wrapper = BUILD_WRAPPER;\n\t\tif (path.isArrowFunctionExpression()) path.arrowFunctionToShadowed();\n\t\telse if (!isDeclaration && asyncFnId) wrapper = NAMED_BUILD_WRAPPER;\n\n\t\tnode.async = false;\n\t\tnode.generator = hasAwait;\n\n\t\tnode.id = null;\n\n\t\tif (isDeclaration) node.type = 'FunctionExpression';\n\n\t\tconst bbImport = addNamed(path, 'bluebird', hasAwait ? 'coroutine' : 'method');\n\t\tconst built = t.callExpression(bbImport, [node]);\n\t\tconst container = wrapper({\n\t\t\tNAME: asyncFnId,\n\t\t\tREF: path.scope.generateUidIdentifier('ref'),\n\t\t\tFUNCTION: built,\n\t\t\tPARAMS: node.params.map(() => path.scope.generateUidIdentifier('x')),\n\t\t}).expression;\n\n\t\tif (isDeclaration) {\n\t\t\tconst declar = t.variableDeclaration('let', [\n\t\t\t\tt.variableDeclarator(\n\t\t\t\t\tt.identifier(asyncFnId.name),\n\t\t\t\t\tt.callExpression(container, [])\n\t\t\t\t),\n\t\t\t]);\n\t\t\tdeclar._blockHoist = true;\n\n\t\t\tpath.replaceWith(declar);\n\t\t} else {\n\t\t\tconst retFunction = container.body.body[1].argument;\n\t\t\tif (!asyncFnId) {\n\t\t\t\tnameFunction({\n\t\t\t\t\tnode: retFunction,\n\t\t\t\t\tparent: path.parent,\n\t\t\t\t\tscope: path.scope,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!retFunction || retFunction.id || node.params.length) {\n\t\t\t\t// we have an inferred function id or params so we need this wrapper\n\t\t\t\tpath.replaceWith(t.callExpression(container, []));\n\t\t\t} else {\n\t\t\t\t// we can omit this wrapper as the conditions it protects for do not apply\n\t\t\t\tpath.replaceWith(built);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\t// inherits: syntaxAsyncFunctions,\n\t\tvisitor: {\n\t\t\tFunction(path: NodePath, state: any) {\n\t\t\t\tconst {node, scope} = path;\n\t\t\t\tif (!node.async || node.generator) return;\n\t\t\t\tconst hasAwait = traverse.hasType(node.body, scope, 'AwaitExpression', FUNCTION_TYPES);\n\n\t\t\t\ttraverse(node, {\n\t\t\t\t\tblacklist: FUNCTION_TYPES,\n\n\t\t\t\t\tAwaitExpression(path2: NodePath) {\n\t\t\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\t\t\tpath2.node.type = 'YieldExpression';\n\t\t\t\t\t\tpath2.node.argument = t.callExpression(\n\t\t\t\t\t\t\taddNamed(path, 'bluebird', 'resolve'),\n\t\t\t\t\t\t\t[path2.node.argument]\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t}, scope);\n\n\t\t\t\tconst isClassOrObjectMethod = path.isClassMethod() || path.isObjectMethod();\n\t\t\t\t(isClassOrObjectMethod ? classOrObjectMethod : plainFunction)(path, state, hasAwait);\n\t\t\t},\n\t\t},\n\t};\n}\n"]}